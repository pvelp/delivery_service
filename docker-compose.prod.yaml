version: '3.8'

services:
  web:
    image: "delivery_service:dep_back"
    build: .
    tty: true
    command: sh -c "cd ./backend && gunicorn config.wsgi --bind 0.0.0.0:8000 --timeout 180"
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    expose:
      - 8000
    restart: on-failure
#    env_file:
#      - ./.env
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:15
    restart: unless-stopped
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=secretkey
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    build: ./nginx
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    ports:
      - 1337:80
    depends_on:
      - web

  redis:
    image: redis
    ports:
      - "6379:6379"

  celery:
    build: .
    tty: true
    command: celery -A backend.config worker -l INFO
    environment:
      - PYTHONPATH=./backend
    depends_on:
      - redis
      - web
  frontend:
    build: ./frontend
    ports:
      - 5500:1337
    depends_on:
      - web


volumes:
  pg_data:
  static_volume:
  media_volume: